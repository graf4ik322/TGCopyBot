#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏ –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö.
–ü–∞—Ç—á–∏—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π copier.py –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤.
"""

import asyncio
import logging
from typing import List, Dict, Any, Set
from telethon.tl.types import Message, PeerChannel
from telethon.tl.functions.channels import GetFullChannelRequest


def patch_copier_for_private_channels(copier_instance):
    """
    –ü–∞—Ç—á–∏—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä TelegramCopier –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏.
    
    Args:
        copier_instance: –≠–∫–∑–µ–º–ø–ª—è—Ä TelegramCopier –¥–ª—è –ø–∞—Ç—á–∏–Ω–≥–∞
    """
    logger = logging.getLogger('private_channel_patch')
    logger.info("üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–∞—Ç—á –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤...")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    original_preload_comments = copier_instance.preload_all_comments_cache
    original_get_comments_from_cache = copier_instance.get_comments_from_cache
    original_find_discussion_groups = getattr(copier_instance, '_find_discussion_groups', None)
    
    async def enhanced_find_discussion_groups(source_entity) -> Set[int]:
        """
        –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ discussion groups –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤.
        
        Args:
            source_entity: –°—É—â–Ω–æ—Å—Ç—å –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞
            
        Returns:
            –ú–Ω–æ–∂–µ—Å—Ç–≤–æ ID –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö discussion groups
        """
        discussion_groups = set()
        
        try:
            # –ú–µ—Ç–æ–¥ 1: –ü–æ–ª—É—á–∞–µ–º linked_chat_id –∏–∑ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∫–∞–Ω–∞–ª–∞
            try:
                full_channel = await copier_instance.client(GetFullChannelRequest(source_entity))
                if hasattr(full_channel.full_chat, 'linked_chat_id') and full_channel.full_chat.linked_chat_id:
                    linked_chat_id = full_channel.full_chat.linked_chat_id
                    discussion_groups.add(linked_chat_id)
                    logger.info(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Å–≤—è–∑–∞–Ω–Ω–∞—è –≥—Ä—É–ø–ø–∞ —á–µ—Ä–µ–∑ API: {linked_chat_id}")
            except Exception as e:
                logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å linked_chat_id: {e}")
            
            # –ú–µ—Ç–æ–¥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            if hasattr(copier_instance.config, 'discussion_group_id') and copier_instance.config.discussion_group_id:
                try:
                    discussion_group_id = int(copier_instance.config.discussion_group_id)
                    discussion_groups.add(discussion_group_id)
                    logger.info(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥—Ä—É–ø–ø—É –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {discussion_group_id}")
                except ValueError:
                    # –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ username
                    try:
                        entity = await copier_instance.client.get_entity(copier_instance.config.discussion_group_id)
                        discussion_groups.add(entity.id)
                        logger.info(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–∞ –≥—Ä—É–ø–ø–∞ –ø–æ username: {entity.id}")
                    except Exception as e:
                        logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥—Ä—É–ø–ø—É –ø–æ username: {e}")
            
            # –ú–µ—Ç–æ–¥ 3: –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –∫–∞–Ω–∞–ª–∞ (–∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º –∫–æ–¥–µ)
            scanned_count = 0
            async for message in copier_instance.client.iter_messages(source_entity, limit=1000):
                scanned_count += 1
                
                if (hasattr(message, 'replies') and message.replies and
                    hasattr(message.replies, 'comments') and message.replies.comments and
                    hasattr(message.replies, 'channel_id') and message.replies.channel_id):
                    discussion_groups.add(message.replies.channel_id)
                
                if scanned_count % 100 == 0:
                    logger.info(f"   üìä –ü—Ä–æ—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ {scanned_count} —Å–æ–æ–±—â–µ–Ω–∏–π...")
            
            logger.info(f"üìä –ü–æ–∏—Å–∫ discussion groups –∑–∞–≤–µ—Ä—à–µ–Ω: –Ω–∞–π–¥–µ–Ω–æ {len(discussion_groups)} –≥—Ä—É–ø–ø")
            for group_id in discussion_groups:
                logger.info(f"   üìã Discussion group: {group_id}")
            
            return discussion_groups
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ discussion groups: {e}")
            return set()
    
    async def enhanced_preload_comments(sample_batch: List[Message]) -> None:
        """
        –£–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤.
        
        Args:
            sample_batch: –ü–µ—Ä–≤—ã–π –±–∞—Ç—á —Å–æ–æ–±—â–µ–Ω–∏–π
        """
        if copier_instance.comments_cache_loaded and not copier_instance.force_reload_comments:
            return
        
        try:
            logger.info("üîÑ –£–õ–£–ß–®–ï–ù–ù–ê–Ø –ü–†–ï–î–ó–ê–ì–†–£–ó–ö–ê: –ü–æ–∏—Å–∫ discussion groups –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞...")
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ discussion groups
            discussion_groups = await enhanced_find_discussion_groups(copier_instance.source_entity)
            
            if not discussion_groups:
                logger.warning("‚ö†Ô∏è Discussion groups –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞")
                copier_instance.comments_cache_loaded = True
                copier_instance.force_reload_comments = False
                return
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏–∑ –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø
            total_comments = 0
            total_posts_with_comments = 0
            
            for discussion_group_id in discussion_groups:
                logger.info(f"üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏–∑ –ø—Ä–∏–≤–∞—Ç–Ω–æ–π –≥—Ä—É–ø–ø—ã {discussion_group_id}")
                
                try:
                    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –∑–∞–≥—Ä—É–∑–∫–∏
                    comments_by_post = await enhanced_get_comments_from_discussion_group(
                        copier_instance, discussion_group_id
                    )
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫—ç—à
                    for post_id, comments in comments_by_post.items():
                        if post_id not in copier_instance.comments_cache:
                            copier_instance.comments_cache[post_id] = []
                            total_posts_with_comments += 1
                        copier_instance.comments_cache[post_id].extend(comments)
                        total_comments += len(comments)
                    
                    logger.info(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(comments_by_post)} —Å–≤—è–∑–µ–π –∏–∑ –≥—Ä—É–ø–ø—ã {discussion_group_id}")
                    
                except Exception as e:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –≥—Ä—É–ø–ø—ã {discussion_group_id}: {e}")
            
            copier_instance.comments_cache_loaded = True
            copier_instance.force_reload_comments = False
            
            logger.info(f"üéØ –£–õ–£–ß–®–ï–ù–ù–ê–Ø –ü–†–ï–î–ó–ê–ì–†–£–ó–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê:")
            logger.info(f"   üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ {total_comments} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
            logger.info(f"   üìä –î–ª—è {total_posts_with_comments} –ø–æ—Å—Ç–æ–≤")
            logger.info(f"   üìä –ò–∑ {len(discussion_groups)} discussion groups")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —É–ª—É—á—à–µ–Ω–Ω–æ–π –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏: {e}")
            copier_instance.comments_cache_loaded = True
            copier_instance.force_reload_comments = False
    
    async def enhanced_get_comments_from_discussion_group(copier_instance, discussion_group_id: int) -> Dict[int, List[Message]]:
        """
        –£–ª—É—á—à–µ–Ω–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏–∑ discussion group –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤.
        
        Args:
            copier_instance: –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–æ–ø–∏—Ä–æ–≤—â–∏–∫–∞
            discussion_group_id: ID discussion group
            
        Returns:
            –°–ª–æ–≤–∞—Ä—å {channel_post_id: [comments]}
        """
        comments_by_post = {}
        
        try:
            discussion_group = PeerChannel(discussion_group_id)
            logger.info(f"üîç –°–∫–∞–Ω–∏—Ä—É–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—É—é –≥—Ä—É–ø–ø—É –æ–±—Å—É–∂–¥–µ–Ω–∏–π {discussion_group_id}")
            
            message_count = 0
            forwarded_posts = {}  # –ö–∞—Ä—Ç–∞ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤
            
            # –≠–¢–ê–ü 1: –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø–µ—Ä–µ—Å–ª—è–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã –∏–∑ –∫–∞–Ω–∞–ª–∞
            async for disc_message in copier_instance.client.iter_messages(discussion_group, limit=None):
                message_count += 1
                
                if message_count % 500 == 0:
                    logger.info(f"   üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {message_count} —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –≥—Ä—É–ø–ø—ã...")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                if (hasattr(disc_message, 'fwd_from') and disc_message.fwd_from and
                    hasattr(disc_message.fwd_from, 'channel_post') and disc_message.fwd_from.channel_post):
                    
                    channel_post_id = disc_message.fwd_from.channel_post
                    forwarded_posts[channel_post_id] = disc_message.id
                    logger.debug(f"üì§ –ù–∞–π–¥–µ–Ω –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã–π –ø–æ—Å—Ç: –∫–∞–Ω–∞–ª {channel_post_id} -> –≥—Ä—É–ø–ø–∞ {disc_message.id}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä—è–º—ã–µ —Å–≤—è–∑–∏ (–¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤)
                elif hasattr(disc_message, 'id') and not hasattr(disc_message, 'reply_to'):
                    # –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ø–æ—Å—Ç –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
                    # –ü—Ä–æ–±—É–µ–º —Å–≤—è–∑–∞—Ç—å –ø–æ ID (—á–∞—Å—Ç–æ ID —Å–æ–≤–ø–∞–¥–∞—é—Ç –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö)
                    try:
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–∞–∫–∏–º ID –≤ –∫–∞–Ω–∞–ª–µ
                        test_message = await copier_instance.client.get_messages(
                            copier_instance.source_entity, ids=disc_message.id
                        )
                        if test_message and not test_message.empty:
                            forwarded_posts[disc_message.id] = disc_message.id
                            logger.debug(f"üîó –ü—Ä—è–º–∞—è —Å–≤—è–∑—å: –∫–∞–Ω–∞–ª {disc_message.id} -> –≥—Ä—É–ø–ø–∞ {disc_message.id}")
                    except Exception:
                        pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
            
            logger.info(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(forwarded_posts)} —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤ –≤ –≥—Ä—É–ø–ø–µ")
            
            # –≠–¢–ê–ü 2: –°–æ–±–∏—Ä–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –∫–∞–∂–¥–æ–º—É –ø–æ—Å—Ç—É
            for channel_post_id, discussion_message_id in forwarded_posts.items():
                try:
                    comments = []
                    comment_count = 0
                    
                    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    async for comment in copier_instance.client.iter_messages(
                        discussion_group,
                        reply_to=discussion_message_id,
                        limit=None
                    ):
                        comments.append(comment)
                        comment_count += 1
                    
                    if comments:
                        comments_by_post[channel_post_id] = comments
                        logger.debug(f"üí¨ –ü–æ—Å—Ç {channel_post_id}: —Å–æ–±—Ä–∞–Ω–æ {comment_count} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
                    
                except Exception as e:
                    logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–ª—è –ø–æ—Å—Ç–∞ {channel_post_id}: {e}")
            
            logger.info(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥—Ä—É–ø–ø—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {len(comments_by_post)} –ø–æ—Å—Ç–æ–≤ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ discussion group {discussion_group_id}: {e}")
        
        return comments_by_post
    
    async def enhanced_get_comments_from_cache(message: Message) -> List[Message]:
        """
        –£–ª—É—á—à–µ–Ω–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏–∑ –∫—ç—à–∞ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏.
        
        Args:
            message: –°–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
            
        Returns:
            –°–ø–∏—Å–æ–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
        """
        try:
            # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
            comments = copier_instance.comments_cache.get(message.id, [])
            
            if comments:
                logger.debug(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ {message.id}: –Ω–∞–π–¥–µ–Ω–æ {len(comments)} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤ –∫—ç—à–µ")
                return comments
            
            # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ –∫—ç—à
            if not copier_instance.comments_cache_loaded:
                logger.warning(f"‚ö†Ô∏è –ö—ç—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è {message.id}")
                # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º –∫—ç—à
                copier_instance.force_reload_comments = True
                await enhanced_preload_comments([message])
                
                # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞
                comments = copier_instance.comments_cache.get(message.id, [])
                if comments:
                    logger.debug(f"üí¨ –ü–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ - —Å–æ–æ–±—â–µ–Ω–∏–µ {message.id}: –Ω–∞–π–¥–µ–Ω–æ {len(comments)} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
                    return comments
            
            logger.debug(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ {message.id}: –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return []
            
        except Exception as e:
            logger.warning(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è {message.id}: {e}")
            return []
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–∞—Ç—á–∏
    copier_instance.preload_all_comments_cache = enhanced_preload_comments
    copier_instance.get_comments_from_cache = enhanced_get_comments_from_cache
    copier_instance._enhanced_find_discussion_groups = enhanced_find_discussion_groups
    
    # –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–æ–¥ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    async def diagnose_comments_setup():
        """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞."""
        logger.info("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        if hasattr(copier_instance, 'config'):
            config = copier_instance.config
            logger.info(f"   üìã Source group: {config.source_group_id}")
            logger.info(f"   üìã Target group: {config.target_group_id}")
            
            if hasattr(config, 'discussion_group_id') and config.discussion_group_id:
                logger.info(f"   üìã Discussion group: {config.discussion_group_id}")
            else:
                logger.warning("   ‚ö†Ô∏è Discussion group ID –Ω–µ —É–∫–∞–∑–∞–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫—ç—à–∞
        cache_size = len(copier_instance.comments_cache)
        logger.info(f"   üìä –†–∞–∑–º–µ—Ä –∫—ç—à–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {cache_size}")
        logger.info(f"   üìä –ö—ç—à –∑–∞–≥—Ä—É–∂–µ–Ω: {copier_instance.comments_cache_loaded}")
        logger.info(f"   üìä –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞: {copier_instance.force_reload_comments}")
        
        if cache_size > 0:
            logger.info("   ‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∞–π–¥–µ–Ω—ã –≤ –∫—ç—à–µ")
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
            for post_id, comments in list(copier_instance.comments_cache.items())[:3]:
                logger.info(f"      - –ü–æ—Å—Ç {post_id}: {len(comments)} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
        else:
            logger.warning("   ‚ö†Ô∏è –ö—ç—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø—É—Å—Ç")
    
    copier_instance.diagnose_comments_setup = diagnose_comments_setup
    
    logger.info("‚úÖ –ü–∞—Ç—á –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –ø—Ä–∏–º–µ–Ω–µ–Ω")
    logger.info("   - –£–ª—É—á—à–µ–Ω –ø–æ–∏—Å–∫ discussion groups")
    logger.info("   - –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ discussion_group_id")
    logger.info("   - –£–ª—É—á—à–µ–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
    logger.info("   - –î–æ–±–∞–≤–ª–µ–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏")
    logger.info("   - –î–æ–±–∞–≤–ª–µ–Ω –º–µ—Ç–æ–¥ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: diagnose_comments_setup()")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø–∞—Ç—á–∞ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É —ç–∫–∑–µ–º–ø–ª—è—Ä—É
def apply_private_channel_patch(copier_instance):
    """
    –ü—Ä–∏–º–µ–Ω—è–µ—Ç –ø–∞—Ç—á –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É —ç–∫–∑–µ–º–ø–ª—è—Ä—É –∫–æ–ø–∏—Ä–æ–≤—â–∏–∫–∞.
    
    Args:
        copier_instance: –≠–∫–∑–µ–º–ø–ª—è—Ä TelegramCopier
    """
    patch_copier_for_private_channels(copier_instance)
    return copier_instance


if __name__ == "__main__":
    print("üìã –ú–æ–¥—É–ª—å –ø–∞—Ç—á–µ–π –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤")
    print("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ apply_private_channel_patch(copier_instance) –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø–∞—Ç—á–∞")