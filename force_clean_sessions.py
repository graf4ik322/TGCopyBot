#!/usr/bin/env python3
"""
–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ —Å–µ—Å—Å–∏–∏ –∏ –¥–∞–Ω–Ω—ã—Ö.
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–≥–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∞–µ—Ç –∏–∑-–∑–∞ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π.
"""

import os
import subprocess
import sys

def run_command(cmd):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –∏ –ø–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç."""
    try:
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
        if result.stdout:
            print(f"‚úÖ {result.stdout.strip()}")
        if result.stderr and result.returncode != 0:
            print(f"‚ö†Ô∏è {result.stderr.strip()}")
        return result.returncode == 0
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã '{cmd}': {e}")
        return False

def main():
    print("üßπ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–∏...")
    print()
    
    # 1. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    print("1Ô∏è‚É£ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä...")
    run_command("docker compose down")
    
    # 2. –£–¥–∞–ª—è–µ–º Docker volume (–ì–õ–ê–í–ù–û–ï!)
    print("\n2Ô∏è‚É£ –£–¥–∞–ª—è–µ–º Docker volume —Å –¥–∞–Ω–Ω—ã–º–∏...")
    if not run_command("docker volume rm tgcopybot_telegram_data"):
        print("‚ö†Ô∏è –ü—Ä–æ–±—É–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ...")
        run_command("docker volume rm tgcopybot_telegram_data --force")
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –æ—á–∏—â–∞–µ–º –≤—Å–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ volumes
    print("üßπ –û—á–∏—â–∞–µ–º –≤—Å–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ volumes...")
    run_command("docker volume prune -f")
    
    # 3. –£–¥–∞–ª—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ñ–∞–π–ª—ã —Å–µ—Å—Å–∏–∏
    print("\n3Ô∏è‚É£ –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã —Å–µ—Å—Å–∏–∏...")
    files_to_remove = [
        "telegram_copier.session",
        "telegram_copier.session-journal", 
        "./data/telegram_copier.session",
        "./data/telegram_copier.session-journal",
        "last_message_id.txt",
        "./data/last_message_id.txt",
        "telegram_copier.lock",
        "./data/telegram_copier.lock", 
        "telegram_copier.log",
        "./data/telegram_copier.log"
    ]
    
    for file_path in files_to_remove:
        if os.path.exists(file_path):
            try:
                os.remove(file_path)
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω: {file_path}")
            except Exception as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {file_path}: {e}")
        else:
            print(f"‚ÑπÔ∏è –ù–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
    
    # 4. –°–æ–∑–¥–∞–µ–º —á–∏—Å—Ç—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–∞–Ω–Ω—ã—Ö
    print("\n4Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —á–∏—Å—Ç—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–∞–Ω–Ω—ã—Ö...")
    try:
        os.makedirs("./data", exist_ok=True)
        os.chmod("./data", 0o755)
        print("‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ./data —Å–æ–∑–¥–∞–Ω–∞")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {e}")
    
    print("\nüéâ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\nüöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∑–∞–Ω–æ–≤–æ:")
    print("   ./run_with_auth.sh")
    print("\nüí° –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–æ–≤–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")

if __name__ == "__main__":
    main()