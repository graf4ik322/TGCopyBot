#!/usr/bin/env python3
"""
–¢–µ—Å—Ç—ã —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –∏ –±–∞–∑–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π.
"""

import os
import sys
import tempfile
import time

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))


def test_file_operations():
    """–¢–µ—Å—Ç —Ñ–∞–π–ª–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π."""
    print("–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏...")
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    from utils import save_last_message_id, load_last_message_id, format_file_size, sanitize_filename
    
    with tempfile.TemporaryDirectory() as temp_dir:
        progress_file = os.path.join(temp_dir, 'test_progress.txt')
        
        # –¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∏
        save_last_message_id(12345, progress_file)
        loaded_id = load_last_message_id(progress_file)
        assert loaded_id == 12345, f"–û–∂–∏–¥–∞–ª—Å—è ID 12345, –ø–æ–ª—É—á–µ–Ω {loaded_id}"
        
        # –¢–µ—Å—Ç –∞—Ç–æ–º–∞—Ä–Ω–æ—Å—Ç–∏ - –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω
        temp_file = f"{progress_file}.tmp"
        assert not os.path.exists(temp_file), "–í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ —É–¥–∞–ª–µ–Ω"
        
        print("‚úÖ –ê—Ç–æ–º–∞—Ä–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        # –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞
        assert format_file_size(1024) == "1.0 KB"
        assert format_file_size(1024 * 1024) == "1.0 MB"
        print("‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        # –¢–µ—Å—Ç –æ—á–∏—Å—Ç–∫–∏ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        assert sanitize_filename("file<>test.txt") == "file__test.txt"
        print("‚úÖ –û—á–∏—Å—Ç–∫–∞ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")


def test_config_structure():
    """–¢–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏ .env."""
    print("–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    # –ú–æ–∫–∏—Ä—É–µ–º load_dotenv
    import config
    original_load_dotenv = config.load_dotenv
    config.load_dotenv = lambda x: None
    
    try:
        # –¢–µ—Å—Ç —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        os.environ['API_ID'] = '12345'
        os.environ['API_HASH'] = 'test_hash'
        os.environ['PHONE'] = '+1234567890'
        os.environ['SOURCE_GROUP_ID'] = '@source'
        os.environ['TARGET_GROUP_ID'] = '@target'
        
        from config import Config
        config_obj = Config()
        
        assert config_obj.api_id == 12345
        assert config_obj.api_hash == 'test_hash'
        assert config_obj.phone == '+1234567890'
        assert config_obj.validate() == True
        
        print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
        
        # –¢–µ—Å—Ç –ø—Ä–æ–∫—Å–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        os.environ['PROXY_SERVER'] = 'proxy.test.com'
        os.environ['PROXY_PORT'] = '8080'
        
        config_obj = Config()
        proxy_config = config_obj.get_proxy_config()
        assert proxy_config is not None
        assert proxy_config['addr'] == 'proxy.test.com'
        assert proxy_config['port'] == 8080
        
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
    finally:
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
        config.load_dotenv = original_load_dotenv
        
        # –û—á–∏—â–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        for key in ['API_ID', 'API_HASH', 'PHONE', 'SOURCE_GROUP_ID', 'TARGET_GROUP_ID', 'PROXY_SERVER', 'PROXY_PORT']:
            if key in os.environ:
                del os.environ[key]


def test_process_lock_basic():
    """–ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞."""
    print("–¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—É—é –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø—Ä–æ—Ü–µ—Å—Å–∞...")
    
    from utils import ProcessLock
    
    with tempfile.TemporaryDirectory() as temp_dir:
        lock_file = os.path.join(temp_dir, 'test.lock')
        
        # –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        lock1 = ProcessLock(lock_file)
        assert lock1.acquire() == True, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É"
        
        # –¢–µ—Å—Ç –Ω–µ—É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ç–æ—Ä–æ–π –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        lock2 = ProcessLock(lock_file)
        assert lock2.acquire() == False, "–í—Ç–æ—Ä–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã–ª–∞ –±—ã—Ç—å –ø–æ–ª—É—á–µ–Ω–∞"
        
        # –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        lock1.release()
        
        # –¢–µ–ø–µ—Ä—å –≤—Ç–æ—Ä–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å
        assert lock2.acquire() == True, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø–æ—Å–ª–µ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è"
        lock2.release()
        
        print("‚úÖ –ë–∞–∑–æ–≤–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")


def test_imports_and_structure():
    """–¢–µ—Å—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –∏–º–ø–æ—Ä—Ç–æ–≤ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –º–æ–¥—É–ª–µ–π."""
    print("–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è
    try:
        from config import Config
        from utils import RateLimiter, ProgressTracker, ProcessLock
        print("‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤
        rate_limiter = RateLimiter(30, 3)
        progress_tracker = ProgressTracker(100)
        process_lock = ProcessLock()
        
        print("‚úÖ –í—Å–µ –æ–±—ä–µ–∫—Ç—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    
    return True


def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤."""
    print("=== –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –∏ –ª–æ–≥–∏–∫–∏ ===")
    
    try:
        test_file_operations()
        test_config_structure()
        test_process_lock_basic()
        test_imports_and_structure()
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –∏ –ª–æ–≥–∏–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!")
        print("\n‚úÖ –ü–†–û–í–ï–†–ï–ù–û:")
        print("  - –°–∏–Ω—Ç–∞–∫—Å–∏—Å –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        print("  - –ê—Ç–æ–º–∞—Ä–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("  - –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç")
        print("  - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        print("  - –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç")
        print("  - –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
        
        return 0
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö: {e}")
        import traceback
        traceback.print_exc()
        return 1


if __name__ == '__main__':
    exit_code = main()
    sys.exit(exit_code)