#!/usr/bin/env python3
"""
Utility script to list available channels for debugging channel ID configuration.
"""

import asyncio
import sys
from telethon import TelegramClient
from telethon.errors import SessionPasswordNeededError
from config import Config
from utils import setup_logging


async def list_available_channels():
    """–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."""
    config = Config()
    logger = setup_logging()
    
    if not config.validate():
        logger.error("‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        return False
    
    client = None
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
        client = TelegramClient(
            session=config.session_name,
            api_id=config.api_id,
            api_hash=config.api_hash,
            proxy=config.get_proxy_config()
        )
        
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        await client.start()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        if not await client.is_user_authorized():
            logger.info("üì± –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...")
            await client.send_code_request(config.phone)
            code = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ")
            
            try:
                await client.sign_in(config.phone, code)
            except SessionPasswordNeededError:
                password = input("–í–≤–µ–¥–∏—Ç–µ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å: ")
                await client.sign_in(password=password)
        
        me = await client.get_me()
        logger.info(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫: {me.first_name}")
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–∏–∞–ª–æ–≥–æ–≤
        logger.info("üìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤...")
        dialogs = await client.get_dialogs(limit=200)
        
        channels = []
        groups = []
        users = []
        
        for dialog in dialogs:
            entity = dialog.entity
            entity_info = {
                'id': entity.id,
                'title': getattr(entity, 'title', f"{getattr(entity, 'first_name', '')} {getattr(entity, 'last_name', '')}".strip()),
                'username': getattr(entity, 'username', None),
                'type': type(entity).__name__
            }
            
            if 'Channel' in entity_info['type']:
                channels.append(entity_info)
            elif 'Chat' in entity_info['type']:
                groups.append(entity_info)
            else:
                users.append(entity_info)
        
        # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        print("\n" + "="*80)
        print("üìã –î–û–°–¢–£–ü–ù–´–ï –ö–ê–ù–ê–õ–´ –ò –ì–†–£–ü–ü–´")
        print("="*80)
        
        if channels:
            print(f"\nüì∫ –ö–ê–ù–ê–õ–´ ({len(channels)}):")
            print("-" * 50)
            for channel in channels:
                username_str = f"@{channel['username']}" if channel['username'] else "–ë–µ–∑ username"
                print(f"ID: {channel['id']}")
                print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {channel['title']}")
                print(f"Username: {username_str}")
                print(f"–¢–∏–ø: {channel['type']}")
                print("-" * 30)
        
        if groups:
            print(f"\nüë• –ì–†–£–ü–ü–´ ({len(groups)}):")
            print("-" * 50)
            for group in groups:
                username_str = f"@{group['username']}" if group['username'] else "–ë–µ–∑ username"
                print(f"ID: {group['id']}")
                print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {group['title']}")
                print(f"Username: {username_str}")
                print(f"–¢–∏–ø: {group['type']}")
                print("-" * 30)
        
        print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"–í—Å–µ–≥–æ –¥–∏–∞–ª–æ–≥–æ–≤: {len(dialogs)}")
        print(f"–ö–∞–Ω–∞–ª—ã: {len(channels)}")
        print(f"–ì—Ä—É–ø–ø—ã: {len(groups)}")
        print(f"–õ–∏—á–Ω—ã–µ —á–∞—Ç—ã: {len(users)}")
        
        print(f"\nüí° –ü–û–î–°–ö–ê–ó–ö–ò:")
        print("‚Ä¢ –î–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ID –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ")
        print("‚Ä¢ ID –∫–∞–Ω–∞–ª–æ–≤ –æ–±—ã—á–Ω–æ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞")
        print("‚Ä¢ –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å username —Å —Å–∏–º–≤–æ–ª–æ–º @ (–Ω–∞–ø—Ä–∏–º–µ—Ä, @channel_name)")
        print("‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª –ø–µ—Ä–µ–¥ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ–º")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        if config.source_group_id:
            print(f"\nüîç –ü–†–û–í–ï–†–ö–ê –¢–ï–ö–£–©–ï–ô –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:")
            print(f"–ò—Å—Ö–æ–¥–Ω—ã–π –∫–∞–Ω–∞–ª –≤ –∫–æ–Ω—Ñ–∏–≥–µ: {config.source_group_id}")
            
            source_found = False
            for channel in channels + groups:
                if (str(channel['id']) == str(config.source_group_id) or 
                    (channel['username'] and f"@{channel['username']}" == config.source_group_id)):
                    print(f"‚úÖ –ò—Å—Ö–æ–¥–Ω—ã–π –∫–∞–Ω–∞–ª –Ω–∞–π–¥–µ–Ω: {channel['title']}")
                    source_found = True
                    break
            
            if not source_found:
                print(f"‚ùå –ò—Å—Ö–æ–¥–Ω—ã–π –∫–∞–Ω–∞–ª '{config.source_group_id}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö!")
                print("   –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª.")
        
        if config.target_group_id:
            print(f"–¶–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª –≤ –∫–æ–Ω—Ñ–∏–≥–µ: {config.target_group_id}")
            
            target_found = False
            for channel in channels + groups:
                if (str(channel['id']) == str(config.target_group_id) or 
                    (channel['username'] and f"@{channel['username']}" == config.target_group_id)):
                    print(f"‚úÖ –¶–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª –Ω–∞–π–¥–µ–Ω: {channel['title']}")
                    target_found = True
                    break
            
            if not target_found:
                print(f"‚ùå –¶–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª '{config.target_group_id}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö!")
                print("   –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞.")
        
        print("\n" + "="*80)
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        logger.error(f"–î–µ—Ç–∞–ª–∏: {traceback.format_exc()}")
        return False
        
    finally:
        if client:
            await client.disconnect()


if __name__ == "__main__":
    print("üîç –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤")
    print("=" * 50)
    
    if sys.version_info < (3, 7):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.7 –∏–ª–∏ –≤—ã—à–µ")
        sys.exit(1)
    
    success = asyncio.run(list_available_channels())
    sys.exit(0 if success else 1)