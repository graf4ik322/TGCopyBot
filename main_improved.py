#!/usr/bin/env python3
"""
–£–ª—É—á—à–µ–Ω–Ω–∞—è –≥–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å—é –∏ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏–µ–π.
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–æ–≤—ã–π DatabaseManager –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–æ—Ä—è–¥–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è.
"""

import asyncio
import sys
import signal
import os
from typing import Optional
from telethon import TelegramClient
from telethon.errors import SessionPasswordNeededError, PhoneCodeInvalidError, PhoneNumberInvalidError

from config import Config
from utils import setup_logging, RateLimiter, ProcessLock
from improved_copier import ImprovedTelegramCopier


class ImprovedTelegramCopierApp:
    """–£–ª—É—á—à–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å—é."""
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
        self.config = Config()
        self.logger = setup_logging()
        self.client: Optional[TelegramClient] = None
        self.copier: Optional[ImprovedTelegramCopier] = None
        self.running = False
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è graceful shutdown
        signal.signal(signal.SIGINT, self._signal_handler)
        signal.signal(signal.SIGTERM, self._signal_handler)
    
    def _signal_handler(self, signum, frame):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è."""
        self.logger.info(f"–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signum}, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É...")
        self.running = False
    
    async def run(self):
        """–ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è."""
        try:
            # –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            if not self.config.validate():
                self.logger.error("‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
                return False
            
            # –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
            with ProcessLock():
                self.logger.info("üîí –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
                
                # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
                await self._initialize_client()
                
                # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–ø–∏—Ä–æ–≤—â–∏–∫–∞
                await self._initialize_copier()
                
                # –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
                self.running = True
                await self._run_copying_process()
                
        except KeyboardInterrupt:
            self.logger.info("‚èπÔ∏è –ü–æ–ª—É—á–µ–Ω–æ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        except Exception as e:
            self.logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            import traceback
            self.logger.error(f"–î–µ—Ç–∞–ª–∏: {traceback.format_exc()}")
            return False
        finally:
            await self._cleanup()
        
        return True
    
    async def _initialize_client(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –∫–ª–∏–µ–Ω—Ç–∞."""
        try:
            # –ü—Ä–æ–∫—Å–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
            proxy_config = self.config.get_proxy_config()
            if proxy_config:
                self.logger.info(f"üåê –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∫—Å–∏: {proxy_config['addr']}:{proxy_config['port']}")
            
            # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
            self.client = TelegramClient(
                self.config.session_name,
                self.config.api_id,
                self.config.api_hash,
                proxy=proxy_config
            )
            
            # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            await self.client.start()
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            if not await self.client.is_user_authorized():
                self.logger.info("üì± –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...")
                
                # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞
                await self.client.send_code_request(self.config.phone)
                
                # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                code = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ")
                
                try:
                    await self.client.sign_in(self.config.phone, code)
                except SessionPasswordNeededError:
                    password = input("–í–≤–µ–¥–∏—Ç–µ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å: ")
                    await self.client.sign_in(password=password)
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            me = await self.client.get_me()
            self.logger.info(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞: {me.first_name}")
            
        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞: {e}")
            raise
    
    async def _initialize_copier(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–ø–∏—Ä–æ–≤—â–∏–∫–∞."""
        try:
            # –°–æ–∑–¥–∞–Ω–∏–µ rate limiter
            rate_limiter = RateLimiter(
                messages_per_hour=self.config.messages_per_hour,
                delay_seconds=self.config.delay_seconds
            )
            
            # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–ø–∏—Ä–æ–≤—â–∏–∫–∞
            self.copier = ImprovedTelegramCopier(
                client=self.client,
                source_group_id=self.config.source_group_id,
                target_group_id=self.config.target_group_id,
                rate_limiter=rate_limiter,
                dry_run=self.config.dry_run,
                database_path="telegram_copier_improved.db"
            )
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–ø–∏—Ä–æ–≤—â–∏–∫–∞
            await self.copier.initialize()
            
            self.logger.info("‚úÖ –ö–æ–ø–∏—Ä–æ–≤—â–∏–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–ø–∏—Ä–æ–≤—â–∏–∫–∞: {e}")
            raise
    
    async def _run_copying_process(self):
        """–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è."""
        try:
            self.logger.info("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è...")
            
            if self.config.dry_run:
                self.logger.info("üîß –†–ï–ñ–ò–ú DRY RUN - —Ä–µ–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞")
            
            # –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
            await self.copier.full_scan_and_copy()
            
            # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            stats = self.copier.get_statistics()
            
            self.logger.info("üéâ –ü—Ä–æ—Ü–µ—Å—Å –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω!")
            self.logger.info(f"üìä –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            self.logger.info(f"   ‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {stats['copied_messages']}")
            self.logger.info(f"   üí¨ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {stats['copied_comments']}")
            self.logger.info(f"   ‚ùå –û—à–∏–±–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π: {stats['failed_messages']}")
            self.logger.info(f"   ‚ùå –û—à–∏–±–æ–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {stats['failed_comments']}")
            
            db_stats = stats.get('database_stats', {})
            if db_stats:
                self.logger.info(f"   üìã –í—Å–µ–≥–æ –≤ –ë–î: {db_stats.get('total_messages', 0)} —Å–æ–æ–±—â–µ–Ω–∏–π")
                self.logger.info(f"   üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤ –ë–î: {db_stats.get('total_comments', 0)}")
                self.logger.info(f"   üì∑ –ê–ª—å–±–æ–º–æ–≤: {db_stats.get('albums_count', 0)}")
                self.logger.info(f"   üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {db_stats.get('progress_percentage', 0):.1f}%")
            
        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
            raise
    
    async def _cleanup(self):
        """–û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤."""
        try:
            if self.copier:
                self.copier.close()
            
            if self.client:
                await self.client.disconnect()
            
            self.logger.info("üîí –†–µ—Å—É—Ä—Å—ã –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω—ã")
            
        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤: {e}")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    app = ImprovedTelegramCopierApp()
    success = await app.run()
    return 0 if success else 1


if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python
    if sys.version_info < (3, 7):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.7 –∏–ª–∏ –≤—ã—à–µ")
        sys.exit(1)
    
    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    exit_code = asyncio.run(main())
    sys.exit(exit_code)