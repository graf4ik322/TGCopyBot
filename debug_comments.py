#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –ø–æ–ª—É—á–µ–Ω–∏–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏–∑ discussion groups.
"""

import asyncio
import logging
import sys
from telethon import TelegramClient
from telethon.tl.types import PeerChannel
from config import API_ID, API_HASH, SESSION_NAME

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler(sys.stdout),
    ]
)

async def debug_comments():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤."""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
    client = TelegramClient(SESSION_NAME, API_ID, API_HASH)
    await client.start()
    
    try:
        # ID –∫–∞–Ω–∞–ª–æ–≤ –∏–∑ –≤–∞—à–∏—Ö –ª–æ–≥–æ–≤
        source_channel_id = -1002399927446
        discussion_group_id = 2265091305  # –ò–∑ –≤–∞—à–∏—Ö –ª–æ–≥–æ–≤
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ ID —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –≤–∞—à–∏—Ö –ª–æ–≥–æ–≤
        test_message_ids = [8565, 8566, 8567, 8568, 8569]
        
        print(f"üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–ª—è –∫–∞–Ω–∞–ª–∞ {source_channel_id}")
        print(f"üîç Discussion group ID: {discussion_group_id}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–Ω–æ—Å—Ç–∏
        source_channel = await client.get_entity(PeerChannel(abs(source_channel_id)))
        discussion_group = await client.get_entity(PeerChannel(discussion_group_id))
        
        print(f"‚úÖ –ò—Å—Ö–æ–¥–Ω—ã–π –∫–∞–Ω–∞–ª: {source_channel.title}")
        print(f"‚úÖ Discussion group: {discussion_group.title}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π
        for message_id in test_message_ids:
            print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ ID: {message_id}")
            
            try:
                # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞
                message = await client.get_messages(source_channel, ids=message_id)
                if not message:
                    print(f"‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ {message_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –∫–∞–Ω–∞–ª–µ")
                    continue
                
                print(f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ: '{getattr(message, 'message', '–ë–µ–∑ —Ç–µ–∫—Å—Ç–∞')[:50]}...'")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º replies
                if hasattr(message, 'replies') and message.replies:
                    print(f"‚úÖ –ï—Å—Ç—å replies: comments={message.replies.comments if hasattr(message.replies, 'comments') else 'N/A'}")
                    print(f"‚úÖ Channel ID –≤ replies: {message.replies.channel_id if hasattr(message.replies, 'channel_id') else 'N/A'}")
                else:
                    print(f"‚ùå –ù–µ—Ç replies —É —Å–æ–æ–±—â–µ–Ω–∏—è {message_id}")
                    continue
                
                # –ò—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ discussion group
                print(f"üîç –ò—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ discussion group...")
                
                found_message = None
                checked_count = 0
                
                async for disc_message in client.iter_messages(discussion_group, limit=100):
                    checked_count += 1
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º forward
                    if (hasattr(disc_message, 'forward') and disc_message.forward and 
                        hasattr(disc_message.forward, 'channel_post')):
                        
                        if disc_message.forward.channel_post == message_id:
                            found_message = disc_message
                            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —á–µ—Ä–µ–∑ forward: discussion ID {disc_message.id}")
                            break
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ —Ç–µ–∫—Å—Ç—É
                    if hasattr(message, 'message') and message.message and hasattr(disc_message, 'message') and disc_message.message:
                        if message.message.strip() == disc_message.message.strip():
                            found_message = disc_message
                            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —á–µ—Ä–µ–∑ —Ç–µ–∫—Å—Ç: discussion ID {disc_message.id}")
                            break
                
                print(f"üîç –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ {checked_count} —Å–æ–æ–±—â–µ–Ω–∏–π –≤ discussion group")
                
                if found_message:
                    # –ò—â–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –Ω–∞–π–¥–µ–Ω–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
                    print(f"üîç –ò—â–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ discussion —Å–æ–æ–±—â–µ–Ω–∏—é {found_message.id}...")
                    
                    comments = []
                    async for comment in client.iter_messages(
                        discussion_group, 
                        reply_to=found_message.id,
                        limit=50
                    ):
                        comments.append(comment)
                    
                    print(f"üí¨ –ù–∞–π–¥–µ–Ω–æ {len(comments)} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
                    
                    for i, comment in enumerate(comments[:5]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                        comment_text = getattr(comment, 'message', '–ë–µ–∑ —Ç–µ–∫—Å—Ç–∞')[:30]
                        print(f"   {i+1}. ID {comment.id}: '{comment_text}...'")
                else:
                    print(f"‚ùå –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ discussion group –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è {message_id}: {e}")
        
        print(f"\nüéØ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        
    finally:
        await client.disconnect()

if __name__ == "__main__":
    asyncio.run(debug_comments())